# version: "3.8" # La versión es opcional

services:
  db: #nombre del servicio
    image: postgres:16-alpine #imagen oficial de postgreSQL
    restart: unless-stopped
    container_name: postgres_db
    environment: #variables de entorno
      POSTGRES_DB: ${DB_NAME} #nombre de la base de datos
      POSTGRES_USER: ${DB_USER} #usuario de la BD
      POSTGRES_PASSWORD: ${DB_PASSWORD} #contraseña BD
      TZ: America/Mexico_City
      PGZ: America/Mexico_City
    volumes:
      - pg_data:/var/lib/postgresql/data #mapeamos la carpeta pg_data en el directorio a la ruta DATA en el contenedo
    ports:
      - ${DB_PORT}:5432 #mapea el puerto 5433 del host al puerto 5432 del contenedor
    healthcheck: #verifica que la bd este lista
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME}"]
      interval: 5s
      timeout: 5s
      retries: 5

  api:
    build: .
    container_name: fastapi_api
    restart: unless-stopped
    ports:
      - "8000:8000"
    environment:
      DB_NAME: ${DB_NAME}
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_HOST: db
      DB_PORT: 5432
      SECRET_KEY: ${SECRET_KEY}
      ALGORITHM: ${ALGORITHM}
      ACCESS_TOKEN_EXPIRE_MINUTES: 30
      REFRESH_TOKEN_EXPIRE_DAYS: 30
    depends_on:
      db:
        condition: service_healthy
    labels:
      - "com.centurylinklabs.watchtower.enable=false"

  frontend:
    build: ./frontend
    container_name: vue_pwa
    restart: unless-stopped
    ports:
      - "8099:80"
    depends_on:
      - api
    labels:
      - "com.centurylinklabs.watchtower.enable=false"

volumes:
  pg_data: {}
